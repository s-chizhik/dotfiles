#!/usr/bin/env bash

function confirmation_question() {
    read -p "Are you sure? " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        [[ "$0" = "$BASH_SOURCE" ]] && return 1
    else
        return 0
    fi
}



# Use colors, but only if connected to a terminal, and that terminal
# supports them.
if which tput >/dev/null 2>&1; then
  ncolors=$(tput colors)
fi

if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi



function install_packages() {
  printf "${RED}"
  echo
  echo " █████╗ ██████╗ ████████╗     ██████╗ ███████╗████████╗"
  echo "██╔══██╗██╔══██╗╚══██╔══╝    ██╔════╝ ██╔════╝╚══██╔══╝"
  echo "███████║██████╔╝   ██║█████╗ ██║  ███╗█████╗     ██║   "
  echo "██╔══██║██╔═══╝    ██║╚════╝ ██║   ██║██╔══╝     ██║   "
  echo "██║  ██║██║        ██║       ╚██████╔╝███████╗   ██║   "
  echo "╚═╝  ╚═╝╚═╝        ╚═╝        ╚═════╝ ╚══════╝   ╚═╝   "
  echo
  printf "${NORMAL}"

  confirmation_question || return

  echo
  echo Installing packages
  echo

  sudo apt-get update
  sudo apt-get install zsh git wget curl htop tmux whois tree pv mc vim dnsutils -y

}

function install_oh_my_zsh() {
  printf "${BLUE}"
  echo
  echo " ██████╗ ██╗  ██╗    ███╗   ███╗██╗   ██╗    ███████╗███████╗██╗  ██╗"
  echo "██╔═══██╗██║  ██║    ████╗ ████║╚██╗ ██╔╝    ╚══███╔╝██╔════╝██║  ██║"
  echo "██║   ██║███████║    ██╔████╔██║ ╚████╔╝       ███╔╝ ███████╗███████║"
  echo "██║   ██║██╔══██║    ██║╚██╔╝██║  ╚██╔╝       ███╔╝  ╚════██║██╔══██║"
  echo "╚██████╔╝██║  ██║    ██║ ╚═╝ ██║   ██║       ███████╗███████║██║  ██║"
  echo " ╚═════╝ ╚═╝  ╚═╝    ╚═╝     ╚═╝   ╚═╝       ╚══════╝╚══════╝╚═╝  ╚═╝"
  echo
  printf "${NORMAL}"


  confirmation_question || return

  echo
  echo Installing oh-my-zsh
  echo

  if ! command -v zsh >/dev/null 2>&1; then
    printf "${YELLOW}Zsh is not installed!${NORMAL} Please install zsh first!\n"
    exit
  fi

  if [ ! -n "$ZSH" ]; then
    ZSH=~/.oh-my-zsh
  fi

  if [ -d "$ZSH" ]; then
    printf "${YELLOW}You already have Oh My Zsh installed.${NORMAL}\n"
    printf "You'll need to remove $ZSH if you want to re-install.\n"
    #exit
  fi
  # Prevent the cloned repository from having insecure permissions. Failing to do
  # so causes compinit() calls to fail with "command not found: compdef" errors
  # for users with insecure umasks (e.g., "002", allowing group writability). Note
  # that this will be ignored under Cygwin by default, as Windows ACLs take
  # precedence over umasks except for filesystems mounted with option "noacl".
  umask g-w,o-w

  printf "${BLUE}Cloning Oh My Zsh...${NORMAL}\n"
  command -v git >/dev/null 2>&1 || {
    echo "Error: git is not installed"
    exit 1
  }
  env git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git "$ZSH" || {
    printf "Error: git clone of oh-my-zsh repo failed\n"
    # exit 1
  }

  printf "${BLUE}Looking for an existing zsh config...${NORMAL}\n"
  if [ -f ~/.zshrc ] || [ -h ~/.zshrc ]; then
    printf "${YELLOW}Found ~/.zshrc.${NORMAL} ${GREEN}Backing up to ~/.zshrc.pre-oh-my-zsh${NORMAL}\n";
    mv ~/.zshrc ~/.zshrc.pre-oh-my-zsh;
  fi

  printf "${BLUE}Using the Oh My Zsh template file and adding it to ~/.zshrc${NORMAL}\n"
  cp "$ZSH"/templates/zshrc.zsh-template ~/.zshrc
  sed "/^export ZSH=/ c\\
  export ZSH=\"$ZSH\"
  " ~/.zshrc > ~/.zshrc-omztemp
  mv -f ~/.zshrc-omztemp ~/.zshrc

}

function install_dotfiles() {
  printf "${YELLOW}"
  echo
  echo "██████╗  ██████╗ ████████╗███████╗██╗██╗     ███████╗███████╗"
  echo "██╔══██╗██╔═══██╗╚══██╔══╝██╔════╝██║██║     ██╔════╝██╔════╝"
  echo "██║  ██║██║   ██║   ██║   █████╗  ██║██║     █████╗  ███████╗"
  echo "██║  ██║██║   ██║   ██║   ██╔══╝  ██║██║     ██╔══╝  ╚════██║"
  echo "██████╔╝╚██████╔╝   ██║   ██║     ██║███████╗███████╗███████║"
  echo "╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝"
  echo
  printf "${NORMAL}"

  confirmation_question || return

  curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  curl -fLo ~/.vim/colors/darcula.vim --create-dirs https://raw.githubusercontent.com/blueshirts/darcula/master/colors/darcula.vim
  curl -fLo ~/.vimrc https://raw.githubusercontent.com/s-chizhik/dotfiles/master/.vimrc

  curl -fLo ~/.gitconfig https://raw.githubusercontent.com/s-chizhik/dotfiles/master/.gitconfig

  sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="bira"/g' ~/.zshrc
  sed -i 's/# DISABLE_AUTO_UPDATE/DISABLE_AUTO_UPDATE/g' ~/.zshrc
}

install_packages
install_oh_my_zsh
install_dotfiles
